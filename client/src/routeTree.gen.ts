/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutTimeTableRouteImport } from './routes/_layout.time-table'
import { Route as LayoutOrdersRouteImport } from './routes/_layout.orders'

const LayoutIndexLazyRouteImport = createFileRoute('/_layout/')()

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexLazyRoute = LayoutIndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() => import('./routes/_layout.index.lazy').then((d) => d.Route))
const LayoutTimeTableRoute = LayoutTimeTableRouteImport.update({
  id: '/time-table',
  path: '/time-table',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutOrdersRoute = LayoutOrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => LayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/orders': typeof LayoutOrdersRoute
  '/time-table': typeof LayoutTimeTableRoute
  '/': typeof LayoutIndexLazyRoute
}
export interface FileRoutesByTo {
  '/orders': typeof LayoutOrdersRoute
  '/time-table': typeof LayoutTimeTableRoute
  '/': typeof LayoutIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/orders': typeof LayoutOrdersRoute
  '/_layout/time-table': typeof LayoutTimeTableRoute
  '/_layout/': typeof LayoutIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/orders' | '/time-table' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/orders' | '/time-table' | '/'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/orders'
    | '/_layout/time-table'
    | '/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexLazyRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/time-table': {
      id: '/_layout/time-table'
      path: '/time-table'
      fullPath: '/time-table'
      preLoaderRoute: typeof LayoutTimeTableRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/orders': {
      id: '/_layout/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof LayoutOrdersRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutOrdersRoute: typeof LayoutOrdersRoute
  LayoutTimeTableRoute: typeof LayoutTimeTableRoute
  LayoutIndexLazyRoute: typeof LayoutIndexLazyRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutOrdersRoute: LayoutOrdersRoute,
  LayoutTimeTableRoute: LayoutTimeTableRoute,
  LayoutIndexLazyRoute: LayoutIndexLazyRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
