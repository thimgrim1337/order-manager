/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutTimeTableImport } from './routes/_layout.time-table'
import { Route as LayoutOrdersImport } from './routes/_layout.orders'

// Create Virtual Routes

const LayoutIndexLazyImport = createFileRoute('/_layout/')()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexLazyRoute = LayoutIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() => import('./routes/_layout.index.lazy').then((d) => d.Route))

const LayoutTimeTableRoute = LayoutTimeTableImport.update({
  id: '/time-table',
  path: '/time-table',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutOrdersRoute = LayoutOrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/orders': {
      id: '/_layout/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof LayoutOrdersImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/time-table': {
      id: '/_layout/time-table'
      path: '/time-table'
      fullPath: '/time-table'
      preLoaderRoute: typeof LayoutTimeTableImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexLazyImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutOrdersRoute: typeof LayoutOrdersRoute
  LayoutTimeTableRoute: typeof LayoutTimeTableRoute
  LayoutIndexLazyRoute: typeof LayoutIndexLazyRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutOrdersRoute: LayoutOrdersRoute,
  LayoutTimeTableRoute: LayoutTimeTableRoute,
  LayoutIndexLazyRoute: LayoutIndexLazyRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/orders': typeof LayoutOrdersRoute
  '/time-table': typeof LayoutTimeTableRoute
  '/': typeof LayoutIndexLazyRoute
}

export interface FileRoutesByTo {
  '/orders': typeof LayoutOrdersRoute
  '/time-table': typeof LayoutTimeTableRoute
  '/': typeof LayoutIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/orders': typeof LayoutOrdersRoute
  '/_layout/time-table': typeof LayoutTimeTableRoute
  '/_layout/': typeof LayoutIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/orders' | '/time-table' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/orders' | '/time-table' | '/'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/orders'
    | '/_layout/time-table'
    | '/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/orders",
        "/_layout/time-table",
        "/_layout/"
      ]
    },
    "/_layout/orders": {
      "filePath": "_layout.orders.tsx",
      "parent": "/_layout"
    },
    "/_layout/time-table": {
      "filePath": "_layout.time-table.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout.index.lazy.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
